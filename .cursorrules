# Instructions

During your interaction with the user, if you find anything reusable in this project (e.g. version of a library, model name), especially about a fix to a mistake you made or a correction you received, you should take note in the `Lessons` section so you will not make the same mistake again.

Use the `.cursorrules` file as a Scratchpad to organize your thoughts. When receiving a new task, review the content, clear old tasks if necessary, explain the current task, and plan steps to complete it. Use todo markers to indicate progress:
[X] Task 1
[ ] Task 2

Update progress in the Scratchpad when finishing subtasks or milestones to maintain a big picture of the task.

# Tools

All tools are in python3. For batch processing, consult the python files and write your own script if needed.

## Screenshot Verification
```bash
venv/bin/python3 tools/screenshot_utils.py URL [--output OUTPUT] [--width WIDTH] [--height HEIGHT]
venv/bin/python3 tools/llm_api.py --prompt "Your verification question" --provider {openai|anthropic} --image path/to/screenshot.png
```

## LLM
```bash
venv/bin/python3 ./tools/llm_api.py --prompt "What is the capital of France?" --provider "anthropic"
```

Supported providers:
- OpenAI (default, model: gpt-4o)
- Azure OpenAI (model: configured via AZURE_OPENAI_MODEL_DEPLOYMENT)
- DeepSeek (model: deepseek-chat)
- Anthropic (model: claude-3-sonnet-20240229)
- Gemini (model: gemini-pro)
- Local LLM (model: Qwen/Qwen2.5-32B-Instruct-AWQ)

## Web browser
```bash
venv/bin/python3 ./tools/web_scraper.py --max-concurrent 3 URL1 URL2 URL3
```

## Search engine
```bash
venv/bin/python3 ./tools/search_engine.py "your search keywords"
```

# Lessons

## User Specified Lessons
- Use python venv in ./venv for development. Check for 'uv' with `which uv`. If available, use `uv pip install`; otherwise, use `pip`.
- For git multiline commit messages, write to a file and use `git commit -F <filename>`. Include "[Cursor] " in commit messages and PR titles.
- The official BTS brand color is #FFDE00 (yellow) and should be used for branded elements instead of purple.
- When customizing Sonner library toast notifications, use standard properties in ExternalToast type and avoid non-standard properties like 'descriptionStyle'.
- For Next.js page layouts, set specific max-width constraints instead of relying on container classes to maintain consistent widths across different screen sizes.
- For image creation in canvas contexts, use `document.createElement('img')` instead of `new Image()` to avoid TypeScript errors.
- Use Unicode escape sequences like `\u201C` (left double quote) and `\u201D` (right double quote) for special characters in TypeScript/JavaScript to avoid syntax and linter errors.
- When deploying to hosting platforms like Netlify or Vercel, ensure that all necessary environment variables (such as Supabase credentials) are configured in the platform's environment settings.
- For mobile-friendly spacing in Next.js layouts, use responsive padding classes (e.g., pt-0 md:pt-8) to reduce space between navbar and content on small screens while maintaining appropriate spacing on larger displays.
- Avoid using console.error in production code; instead, use conditional logging based on NODE_ENV to show detailed errors only in development.
- When implementing SEO in Next.js, metadata cannot be exported from client components (with "use client" directive). For client pages, create a separate metadata.ts file in the same directory.
- For date and time displays that need to work across different user timezones, implement client-side timezone handling using the browser's Date API instead of server-side fixed timezones.
- When working with third-party APIs like Spotify that have rate limits, implement these strategies to prevent 429 errors: 1) Add local caching, 2) Use exponential backoff for retries, 3) Process batch requests sequentially with delays, 4) Add client-side throttling, and 5) Provide clear user feedback during retries.
- When Supabase operations fail with empty error objects `{}`, it usually means the database tables don't exist yet. Always provide helpful error messages that mention "Database tables may not exist. Please run the SQL schema first." instead of just logging the empty error object.
- When implementing like/love counters in Supabase, ensure the main table's like_count field is properly updated when likes are added/removed from the likes junction table. Don't just read the existing like_count - calculate the actual count from the likes table and update the main table to keep it synchronized.

## Cursor learned
- Handle UTF-8 encoding properly for international search queries
- Use 'seaborn-v0_8' instead of 'seaborn' due to recent version changes
- Use 'gpt-4o' as the model name for OpenAI's GPT-4 with vision capabilities
- In Next.js, `dynamic` imports with `{ ssr: false }` cannot be used directly in Server Components. Create a client component wrapper with "use client" that handles the dynamic import.
- For React 19 compatibility issues with packages like react-day-picker, use --legacy-peer-deps or downgrade to React 18.2.0
- When renaming React component functions, maintain backward compatibility with additional named exports
- In Next.js sitemap.ts files, use 'as const' type assertion for changeFrequency values to match the expected literal types in MetadataRoute.Sitemap
- In Next.js projects with aliased imports (@/hooks, @/components), make sure to maintain proper directory structures and use re-export files to maintain backward compatibility when refactoring.

## Message Box UI Pattern
- Container: White background, black border (2px), rounded corners (16px)
- Heading: "Black Han Sans" font, ~32px, black, center-aligned
- Form Layout: Vertical stack with ~16-20px spacing
- Input Fields: Black border (2px), white background, rounded corners (8px), padding (12px)
- Submit Button: Black background, yellow text (#FFDE00), purple heart emoji, full width, rounded (8px)
- Labels: Bold, black text, slightly larger than input text
- Textarea: Taller than regular inputs, same styling pattern

### Completed Features

#### Smart Logo System
- ✅ Added theme context to navbar component
- ✅ Implemented brightness detection for navbar backgrounds
- ✅ Dynamic switching between regular and white BTS logos
- ✅ Applied to both main logo and BTS dropdown icons
- ✅ Works for both desktop and mobile menu interfaces

#### Love Yourself Answer Theme (New)
- ✅ Created vibrant gradient theme inspired by LY Answer artwork:
  - Primary: Vibrant Pink (#E91E63) - left side of gradient
  - Secondary: Deep Purple (#9C27B0) - center gradient
  - Accent: Bright Blue (#2196F3) - right side gradient
  - Background: Pure white to make colors pop
- ✅ Added flowing animations: gradient-flow, love-pulse, rainbow-wave
- ✅ Implemented colorful effects and gradient backgrounds
- ✅ Created dynamic color-shifting animations

#### CSS Animations & Effects
- ✅ Gradient flow animations with 200% background sizing
- ✅ Love pulse and color-shift effects for elements
- ✅ Rainbow wave animations cycling through theme colors
- ✅ Flowing motion effects for decorative elements
- ✅ Enhanced navbar with linear gradient background

#### Previous Themes Maintained
- ✅ Spring Day: Gentle pastel aesthetic for renewal and hope
- ✅ Black Swan: Elegant dark theme with artistic sophistication
- ✅ Permission to Dance: Festival celebration vibes
- ✅ Butter: Smooth summery golden aesthetics

#### Theme Integration
- ✅ Added Love Yourself Answer to availableThemes registry
- ✅ Comprehensive emoji and pattern elements for gradient theme
- ✅ Enhanced navbar effects with flowing gradient lines
- ✅ Sophisticated card styling with color-shifting hover effects

### Technical Implementation
- Smart logo detection using brightness calculation (luminance formula)
- Dynamic theme-aware component rendering
- Love Yourself Answer: Vibrant gradient aesthetic capturing self-love and acceptance
- Comprehensive CSS animations with optimized performance
- Cross-theme compatibility with consistent component behavior
- Enhanced visual effects while maintaining accessibility standards

### Technical Implementation Details
- **Mobile Menu Color Logic**: Uses existing `isDarkNavbar()` function to detect dark themes
- **Dynamic Text Classes**: `mobileMenuTextClass` switches between `text-white` and `text-black`
- **Smart Hover Effects**: Different hover colors for dark vs light themes
- **Emoji Cleanup**: Removed floating emoji animations and main headline emojis
- **Double Border Fix**: Removed inner border on mobile theme toggle image

# Scratchpad

## Current Task: SEO Optimization & Games CTA Simplification

User requested to add comprehensive SEO metadata for all games pages and simplify the GamesCTA component to match site style.

### Plan:
[X] Add comprehensive SEO metadata for main games page (/games)
[X] Add SEO metadata for BTS Whack-a-Mole game page
[X] Add SEO metadata for Purple Hearts Collector game page
[X] Simplify GamesCTA component to match site design
[X] Remove excessive gradients, animations, and emojis from CTA
[X] Use consistent white background with black borders styling

### Completed Features:

#### Homepage Games CTA
- ✅ Created GamesCTA component with BTS styling
- ✅ Purple hearts, gradients, and floating animation elements
- ✅ Game preview cards for Hearts Collector and Whack-a-Mole
- ✅ Engaging "Play Games Now" button with hover effects
- ✅ Added stats section (High Scores, Mobile Friendly, BTS Themed)

#### Enhanced Games Page Layout
- ✅ Redesigned header with "ARMY Gaming Zone" title
- ✅ Added floating decorative elements (Sparkles, Stars, Hearts)
- ✅ Enhanced game cards with larger size, better gradients
- ✅ Added gradient overlays and improved typography
- ✅ Replaced all Gamepad2 icons with appropriate alternatives (Crown, Target, Timer, Award, Sparkles)
- ✅ Added leaderboard buttons for quick access to rankings

#### Leaderboard Integration
- ✅ Added leaderboard preview section showing top 3 players
- ✅ Mock leaderboard data with ARMY-themed usernames
- ✅ Crown, Trophy, and Award icons for different rankings
- ✅ Quick access buttons to full leaderboards

#### Coming Soon Section
- ✅ Enhanced upcoming games preview
- ✅ Added preview cards for: Memory Match, Lyrics Quiz, Dance Steps, Trivia Battle
- ✅ Better visual design with gradients and borders

#### Visual Improvements
- ✅ Removed all joystick/controller emojis as requested
- ✅ Enhanced typography with better hierarchy
- ✅ Added hover animations and scale effects
- ✅ Improved color schemes matching BTS brand
- ✅ Better spacing and responsive design

### Recent Updates:

#### Fixed Leaderboard Integration
- ✅ Replaced mock leaderboard data with actual database data
- ✅ Added real-time fetching from Supabase for both games
- ✅ Fixed leaderboard button navigation to correct URLs
- ✅ Added loading states and empty state handling

#### Simplified UI Design
- ✅ Removed excessive animations, emojis, and decorative elements
- ✅ Simplified gradient headings to match other pages
- ✅ Used consistent white background with black borders
- ✅ Reduced hover effects and kept only subtle shadows
- ✅ Cleaned up color scheme to be less overwhelming

#### Technical Improvements
- ✅ Added useEffect and useState for leaderboard data fetching
- ✅ Integrated getTopPurpleHeartsScores and getTopScores functions
- ✅ Created dedicated Purple Hearts Collector leaderboard page
- ✅ Fixed leaderboard navigation URLs for both games
- ✅ Improved error handling and loading states
- ✅ Made UI consistent with other pages in the site

### Latest Updates: SEO & CTA Enhancement

#### SEO Optimization
- ✅ Added comprehensive SEO metadata for main games page with targeted keywords
- ✅ Optimized for "BTS games", "ARMY games", "free BTS games", "BTS mini games"
- ✅ BTS Whack-a-Mole: Specific keywords for all 7 members and game mechanics
- ✅ Purple Hearts Collector: Heart catching game focused keywords
- ✅ Added OpenGraph and Twitter Card metadata for social sharing
- ✅ Implemented proper canonical URLs and robot directives

#### GamesCTA Simplification
- ✅ Removed excessive gradients and background animations
- ✅ Simplified to clean white background with black borders
- ✅ Removed floating hearts and decorative elements  
- ✅ Used consistent BTS brand colors (black bg, yellow text)
- ✅ Cleaner game preview cards with border styling
- ✅ Simplified stats section with more relevant info

### Technical Notes:
- SEO keywords focus on high-volume search terms like "free BTS games", "ARMY games"
- Included member-specific keywords for Whack-a-Mole game discoverability
- GamesCTA now matches site-wide design language (white bg, black borders)
- Maintained functionality while reducing visual clutter
- Used consistent icon colors matching BTS brand guidelines

## Completed Task: BTS Quote Cards Generator Feature

User requested to build a new BTS Quote Cards Generator feature with comprehensive functionality and engaging design.

### Plan:
[X] Create new page at /bts-cards-generator 
[X] Add navigation menu item to ARMY dropdown (both desktop and mobile)
[X] Build comprehensive QuoteCardsGenerator component with all requested features
[X] Add SEO metadata for search optimization
[X] Match existing site styling (white bg, black borders, BTS brand colors)
[X] Create engaging and user-friendly interface

### Completed Features:

#### BTS Quote Cards Generator Page
- ✅ Created new page at /bts-cards-generator with comprehensive layout
- ✅ Added hero section with social media format badges (Instagram, Twitter, TikTok)
- ✅ Included features highlight section showcasing key capabilities
- ✅ Added cross-promotion CTAs to related ARMY features
- ✅ Implemented consistent styling with site design patterns

#### Quote Cards Generator Component (Enhanced)
- ✅ 50+ BTS member quotes with proper attribution and member colors
- ✅ 10 beautiful card design themes including BTS Gold, Purple Dreams, Elegant Black
- ✅ 10 custom fonts including BTS-style Black Han Sans and various typography options
- ✅ Social media format presets with proper aspect ratios (Instagram Story 9:16, Instagram Post 1:1, Twitter, Custom)
- ✅ Toggle between BTS member quotes and custom text input
- ✅ Real-time preview that matches selected format's aspect ratio perfectly
- ✅ Advanced text customization: size (50-150%), position (top/center/bottom)
- ✅ Member color-coded quote badges for BTS quotes
- ✅ Download functionality for PNG and JPG formats with exact preview matching
- ✅ Copy text to clipboard feature
- ✅ Attribution customization option
- ✅ Enhanced canvas-based high-quality image generation with font and positioning support

#### Navigation Integration
- ✅ Added "Quote Cards" menu item to ARMY dropdown in desktop navigation
- ✅ Added mobile navigation menu item with Quote icon
- ✅ Updated active state detection for new route

#### SEO Optimization
- ✅ Comprehensive metadata with targeted keywords for quote cards, social media
- ✅ OpenGraph and Twitter Card metadata for social sharing
- ✅ Optimized for search terms like "BTS quote cards", "inspirational quote generator"
- ✅ Proper canonical URLs and robot directives

### Technical Implementation:
- Advanced canvas-based image generation with gradients, custom fonts, and intelligent text wrapping
- Dynamic aspect ratio preview that matches selected social media format exactly
- Enhanced BTS member quote system with color-coded attributions
- Custom font selection with real-time preview including BTS-style typography
- Advanced text positioning and sizing controls (50-150% size, top/center/bottom positioning)
- High-resolution downloads that perfectly match the live preview
- Responsive design with mobile-friendly interface optimized for all screen sizes
- Intelligent text layout that adapts to different format ratios (square, portrait, landscape)
- Consistent component architecture following site patterns with enhanced UX
- Social media integration tips and format-specific recommendations

### Enhanced Features Added:
- **BTS Member Quotes**: Real quotes from RM, Jin, SUGA, J-Hope, Jimin, V, and Jungkook with member-specific color coding
- **Custom Fonts**: 10 typography options including BTS-style "Black Han Sans" font
- **Perfect Aspect Ratios**: Instagram Story (9:16), Instagram Post (1:1), Twitter (2:1) with accurate previews
- **Text Customization**: Size slider (50-150%) and position controls (top/center/bottom)
- **Visual Enhancements**: Member color badges, improved quote categorization, enhanced preview frame
- **Download Accuracy**: Canvas generation that exactly matches the preview with proper font rendering

## Previous Task: Homepage Container Sequence & ARMY Card Maker CTA

User requested to reorganize the homepage container sequence and create a new BTS ARMY Card Maker Generator CTA.

### Plan:
[X] Reorganize homepage components according to specified sequence
[X] Create new ARMYCardMakerCTA component
[X] Route new CTA to /army-card page
[X] Match existing site styling (white bg, black borders)
[X] Keep styling engaging but not excessive

### Completed Features:

#### Homepage Reorganization
- ✅ Reordered components according to user's sequence:
  1. BTS Calendar
  2. BTS Military Discharge Countdown
  3. Meet the members
  4. BTS Musical Journey
  5. Latest from BTS
  6. BTS Mini Games CTA
  7. Leave a message for BTS form
  8. BTS ARMY Card Maker Generator CTA (new)
  9. Explore ARMY Community
  10. Countdown CTA
  11. Support CTA
- ✅ Removed duplicate ARMYLove component
- ✅ Added proper section comments for clarity

#### New ARMY Card Maker CTA Component
- ✅ Created ARMYCardMakerCTA component with consistent styling
- ✅ Used white background with black borders (2px) and rounded corners
- ✅ Added engaging features preview (Choose Bias, Add Photo, Customize Design)
- ✅ Implemented BTS brand colors (black bg, yellow text for button)
- ✅ Added appropriate icons (CreditCard, Star, Sparkles) from Lucide React
- ✅ Routes to /army-card page as requested
- ✅ Maintains site-wide design consistency

### Technical Implementation:
- Component follows established pattern with white bg, black borders, rounded corners
- Uses BTS brand colors (#FFDE00 yellow) for button text
- Includes purple heart emoji for BTS branding
- Features grid layout for mobile responsiveness
- Hover effects with subtle transitions
- Clear call-to-action button with icon